import{_ as a,c as e,o as r,a1 as d}from"./chunks/framework.C88IP-8t.js";const p=JSON.parse('{"title":"데이터 아키텍처 가이드","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),i={name:"index.md"};function l(s,t,o,h,n,c){return r(),e("div",null,t[0]||(t[0]=[d('<h1 id="데이터-아키텍처-가이드" tabindex="-1">데이터 아키텍처 가이드 <a class="header-anchor" href="#데이터-아키텍처-가이드" aria-label="Permalink to &quot;데이터 아키텍처 가이드&quot;">​</a></h1><p>이 문서는 현대 기업의 데이터 전략에서 핵심이 되는 세 가지 데이터 아키텍처에 대한 포괄적인 가이드를 제공합니다.</p><h2 id="주요-문서" tabindex="-1">주요 문서 <a class="header-anchor" href="#주요-문서" aria-label="Permalink to &quot;주요 문서&quot;">​</a></h2><h3 id="_1-data-mart" tabindex="-1">1. <a href="./posts/data-architecture/data-mart.html">Data Mart</a> <a class="header-anchor" href="#_1-data-mart" aria-label="Permalink to &quot;1. [Data Mart](./posts/data-architecture/data-mart.md)&quot;">​</a></h3><p>특정 비즈니스 영역이나 부서를 위한 데이터 저장소에 대한 상세한 가이드입니다.</p><p><strong>주요 내용:</strong></p><ul><li>Data Mart의 개념과 특징</li><li>유형별 분류 (Dependent, Independent, Hybrid)</li><li>구현 고려사항과 기술 스택</li><li>모니터링 및 유지보수 전략</li></ul><h3 id="_2-data-warehouse" tabindex="-1">2. <a href="./posts/data-architecture/data-warehouse.html">Data Warehouse</a> <a class="header-anchor" href="#_2-data-warehouse" aria-label="Permalink to &quot;2. [Data Warehouse](./posts/data-architecture/data-warehouse.md)&quot;">​</a></h3><p>기업의 의사결정을 지원하는 중앙 집중식 데이터 저장소에 대한 포괄적인 설명입니다.</p><p><strong>주요 내용:</strong></p><ul><li>Data Warehouse의 4가지 특징 (주제 중심적, 통합적, 시계열적, 비휘발성)</li><li>아키텍처와 데이터 모델링</li><li>ETL 프로세스와 성능 최적화</li><li>최신 트렌드와 구현 단계</li></ul><h3 id="_3-data-lake" tabindex="-1">3. <a href="./posts/data-architecture/data-lake.html">Data Lake</a> <a class="header-anchor" href="#_3-data-lake" aria-label="Permalink to &quot;3. [Data Lake](./posts/data-architecture/data-lake.md)&quot;">​</a></h3><p>구조화된 데이터와 비구조화된 데이터를 원본 형태 그대로 저장하는 저장소에 대한 가이드입니다.</p><p><strong>주요 내용:</strong></p><ul><li>Data Lake의 특징과 아키텍처</li><li>Bronze/Silver/Gold Zone 패턴</li><li>빅데이터 분석과 머신러닝 활용</li><li>데이터 늪 방지 전략</li></ul><h3 id="_4-데이터-아키텍처-비교" tabindex="-1">4. <a href="./posts/data-architecture/data-architecture-comparison.html">데이터 아키텍처 비교</a> <a class="header-anchor" href="#_4-데이터-아키텍처-비교" aria-label="Permalink to &quot;4. [데이터 아키텍처 비교](./posts/data-architecture/data-architecture-comparison.md)&quot;">​</a></h3><p>세 가지 데이터 아키텍처의 상세한 비교 분석과 선택 가이드입니다.</p><p><strong>주요 내용:</strong></p><ul><li>성능, 비용, 복잡도 비교</li><li>사용 사례별 선택 가이드</li><li>구현 체크리스트</li><li>하이브리드 전략 제안</li></ul><h2 id="빠른-참조" tabindex="-1">빠른 참조 <a class="header-anchor" href="#빠른-참조" aria-label="Permalink to &quot;빠른 참조&quot;">​</a></h2><h3 id="언제-어떤-아키텍처를-선택해야-할까요" tabindex="-1">언제 어떤 아키텍처를 선택해야 할까요? <a class="header-anchor" href="#언제-어떤-아키텍처를-선택해야-할까요" aria-label="Permalink to &quot;언제 어떤 아키텍처를 선택해야 할까요?&quot;">​</a></h3><table tabindex="0"><thead><tr><th>상황</th><th>추천 아키텍처</th><th>이유</th></tr></thead><tbody><tr><td>특정 부서 분석</td><td><strong>Data Mart</strong></td><td>빠른 구현, 도메인 특화</td></tr><tr><td>전사적 통합 분석</td><td><strong>Data Warehouse</strong></td><td>중앙 집중식 관리, 데이터 품질</td></tr><tr><td>빅데이터/ML</td><td><strong>Data Lake</strong></td><td>다양한 데이터 형식, 확장성</td></tr><tr><td>복잡한 요구사항</td><td><strong>하이브리드</strong></td><td>각 아키텍처의 장점 결합</td></tr></tbody></table><h3 id="기술-스택-비교" tabindex="-1">기술 스택 비교 <a class="header-anchor" href="#기술-스택-비교" aria-label="Permalink to &quot;기술 스택 비교&quot;">​</a></h3><table tabindex="0"><thead><tr><th>구분</th><th>Data Mart</th><th>Data Warehouse</th><th>Data Lake</th></tr></thead><tbody><tr><td><strong>데이터베이스</strong></td><td>PostgreSQL, MySQL</td><td>Redshift, Snowflake</td><td>S3, HDFS</td></tr><tr><td><strong>처리</strong></td><td>간단한 ETL</td><td>복잡한 ETL</td><td>Spark, Flink</td></tr><tr><td><strong>쿼리</strong></td><td>SQL</td><td>SQL</td><td>Hive, Presto</td></tr></tbody></table><h2 id="데이터-엔지니어링-도구" tabindex="-1">데이터 엔지니어링 도구 <a class="header-anchor" href="#데이터-엔지니어링-도구" aria-label="Permalink to &quot;데이터 엔지니어링 도구&quot;">​</a></h2><h3 id="_1-dagster-기초" tabindex="-1">1. <a href="./posts/data-engineering/dagster-basics.html">Dagster 기초</a> <a class="header-anchor" href="#_1-dagster-기초" aria-label="Permalink to &quot;1. [Dagster 기초](./posts/data-engineering/dagster-basics.md)&quot;">​</a></h3><p>데이터 파이프라인 오케스트레이션을 위한 강력한 도구에 대한 가이드입니다.</p><p><strong>주요 내용:</strong></p><ul><li>Dagster의 개념과 특징</li><li>Assets, Ops, Jobs 등 핵심 개념</li><li>설치 및 시작 방법</li><li>모니터링과 개발자 경험</li></ul><h3 id="_2-dbt-기초" tabindex="-1">2. <a href="./posts/data-engineering/dbt-basics.html">DBT 기초</a> <a class="header-anchor" href="#_2-dbt-기초" aria-label="Permalink to &quot;2. [DBT 기초](./posts/data-engineering/dbt-basics.md)&quot;">​</a></h3><p>데이터 웨어하우스에서 SQL 기반 변환을 수행하는 도구에 대한 설명입니다.</p><p><strong>주요 내용:</strong></p><ul><li>DBT의 개념과 특징</li><li>Models, Sources, Tests 등 핵심 개념</li><li>프로젝트 구조와 명령어</li><li>데이터 품질 관리와 문서화</li></ul><h3 id="_3-dagster와-dbt-통합-아키텍처" tabindex="-1">3. <a href="./posts/data-engineering/data-mart-dagster-architecture.html">Dagster와 DBT 통합 아키텍처</a> <a class="header-anchor" href="#_3-dagster와-dbt-통합-아키텍처" aria-label="Permalink to &quot;3. [Dagster와 DBT 통합 아키텍처](./posts/data-engineering/data-mart-dagster-architecture.md)&quot;">​</a></h3><p>Dagster를 사용한 데이터 마트 구축 아키텍처에 대한 상세한 가이드입니다.</p><p><strong>주요 내용:</strong></p><ul><li>Dagster와 DBT의 통합 방법</li><li>데이터 마트 구축 전략</li><li>모니터링과 알림 설정</li><li>실제 구현 사례</li></ul><hr><p><em>이 문서들은 지속적으로 업데이트되며, 최신 데이터 아키텍처 트렌드와 모범 사례를 반영합니다.</em></p>',39)]))}const g=a(i,[["render",l]]);export{p as __pageData,g as default};
